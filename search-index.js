var N = null;var searchIndex = {};
searchIndex["cdr"]={"doc":"A serialization/deserialization implementation for Common Data Representation.","items":[[4,"BigEndian","cdr","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[3,"Deserializer","","A deserializer that reads bytes from a buffer.",N,N],[3,"Error","","The Error type.",N,N],[3,"Serializer","","A serializer that writes values into a buffer.",N,N],[3,"Bounded","","A `SizeLimit` that restricts serialized or deserialized messages so that they do not exceed a certain byte length.",N,N],[12,"0","","",0,N],[3,"Infinite","","A `SizeLimit` without a limit.",N,N],[4,"CdrBe","","OMG CDR big-endian encapsulation.",N,N],[4,"CdrLe","","OMG CDR little-endian encapsulation.",N,N],[4,"PlCdrBe","","ParameterList encapsulated using OMG CDR big-endian encapsulation.",N,N],[4,"PlCdrLe","","ParameterList encapsulated using OMG CDR little-endian encapsulation.",N,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Message","","",1,N],[13,"Io","","",1,N],[13,"DeserializeAnyNotSupported","","",1,N],[13,"InvalidBoolEncoding","","",1,N],[13,"InvalidChar","","",1,N],[13,"InvalidCharEncoding","","",1,N],[13,"InvalidEncapsulation","","",1,N],[13,"InvalidUtf8Encoding","","",1,N],[13,"NumberOutOfRange","","",1,N],[13,"SequenceMustHaveLength","","",1,N],[13,"SizeLimit","","",1,N],[13,"TypeNotSupported","","",1,N],[5,"calc_serialized_size","","Returns the size that an object would be if serialized with a encapsulation.",N,[[["t"]],["u64"]]],[5,"calc_serialized_size_bounded","","Given a maximum size limit, check how large an object would be if it were to be serialized with a encapsulation.",N,[[["t"],["u64"]],["result",["u64"]]]],[5,"serialize","","Serializes a serializable object into a `Vec` of bytes with the encapsulation.",N,[[["t"],["s"]],["result",["vec"]]]],[5,"serialize_into","","Serializes an object directly into a `Write` with the encapsulation.",N,[[["w"],["t"],["s"]],["result"]]],[5,"deserialize","","Deserializes a slice of bytes into an object.",N,N],[5,"deserialize_from","","Deserializes an object directly from a `Read`.",N,[[["r"],["s"]],["result"]]],[0,"de","","Deserializing CDR into Rust data types.",N,N],[3,"Deserializer","cdr::de","A deserializer that reads bytes from a buffer.",N,N],[5,"deserialize_data","","Deserializes a slice of bytes into an object.",N,N],[5,"deserialize_data_from","","Deserializes an object directly from a `Read`.",N,[[["r"],["s"]],["result"]]],[11,"new","","",2,[[["r"],["s"]],["self"]]],[11,"kind_ref","cdr","",3,[[["self"]],["errorkind"]]],[0,"ser","","Serializing Rust data types into CDR.",N,N],[3,"Serializer","cdr::ser","A serializer that writes values into a buffer.",N,N],[5,"serialize_data","","Serializes a serializable object into a `Vec` of bytes.",N,[[["t"],["s"]],["result",["vec"]]]],[5,"serialize_data_into","","Serializes an object directly into a `Write`.",N,[[["w"],["t"],["s"]],["result"]]],[11,"new","","",4,[[["w"]],["self"]]],[0,"size","cdr","Measuring the size of (de)serialized data.",N,N],[3,"Bounded","cdr::size","A `SizeLimit` that restricts serialized or deserialized messages so that they do not exceed a certain byte length.",N,N],[12,"0","","",0,N],[3,"Infinite","","A `SizeLimit` without a limit.",N,N],[5,"calc_serialized_data_size","","Returns the size that an object would be if serialized.",N,[[["t"]],["u64"]]],[5,"calc_serialized_data_size_bounded","","Given a maximum size limit, check how large an object would be if it were to be serialized.",N,[[["t"],["u64"]],["result",["u64"]]]],[8,"SizeLimit","","Limits on the number of bytes that can be read or written.",N,N],[10,"add","","",5,[[["self"],["u64"]],["result"]]],[10,"limit","","",5,[[["self"]],["option",["u64"]]]],[6,"Result","cdr","Convenient wrapper around `std::Result`.",N,N],[8,"Encapsulation","","Data encapsulation scheme identifiers.",N,N],[16,"E","","",6,N],[10,"id","","",6,N],[11,"option","","",6,N],[8,"SizeLimit","","Limits on the number of bytes that can be read or written.",N,N],[10,"add","","",5,[[["self"],["u64"]],["result"]]],[10,"limit","","",5,[[["self"]],["option",["u64"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"from","cdr::de","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"to_string","cdr","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"as_fail","","",3,[[["self"]],["fail"]]],[11,"from","cdr::ser","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"from","cdr::size","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"from","cdr","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"clone","","",7,[[["self"]],["bigendian"]]],[11,"clone","","",8,[[["self"]],["littleendian"]]],[11,"partial_cmp","","",8,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",7,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",7,N],[11,"hash","","",8,N],[11,"cmp","","",7,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["littleendian"]],["ordering"]]],[11,"default","","",8,[[],["littleendian"]]],[11,"default","","",7,[[],["bigendian"]]],[11,"read_u16","","",7,N],[11,"read_u32","","",7,N],[11,"read_u64","","",7,N],[11,"read_uint","","",7,N],[11,"write_u16","","",7,N],[11,"write_u32","","",7,N],[11,"write_u64","","",7,N],[11,"write_uint","","",7,N],[11,"read_u16_into","","",7,N],[11,"read_u32_into","","",7,N],[11,"read_u64_into","","",7,N],[11,"write_u16_into","","",7,N],[11,"write_u32_into","","",7,N],[11,"write_u64_into","","",7,N],[11,"from_slice_u16","","",7,N],[11,"from_slice_u32","","",7,N],[11,"from_slice_u64","","",7,N],[11,"from_slice_f32","","",7,N],[11,"from_slice_f64","","",7,N],[11,"read_u16","","",8,N],[11,"read_u32","","",8,N],[11,"read_u64","","",8,N],[11,"read_uint","","",8,N],[11,"write_u16","","",8,N],[11,"write_u32","","",8,N],[11,"write_u64","","",8,N],[11,"write_uint","","",8,N],[11,"read_u16_into","","",8,N],[11,"read_u32_into","","",8,N],[11,"read_u64_into","","",8,N],[11,"write_u16_into","","",8,N],[11,"write_u32_into","","",8,N],[11,"write_u64_into","","",8,N],[11,"from_slice_u16","","",8,N],[11,"from_slice_u32","","",8,N],[11,"from_slice_u64","","",8,N],[11,"from_slice_f32","","",8,N],[11,"from_slice_f64","","",8,N],[11,"eq","","",7,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",8,[[["self"],["littleendian"]],["bool"]]],[11,"id","","",10,N],[11,"id","","",11,N],[11,"id","","",12,N],[11,"id","","",13,N],[11,"add","cdr::size","",0,[[["self"],["u64"]],["result"]]],[11,"limit","","",0,[[["self"]],["option",["u64"]]]],[11,"add","","",9,[[["self"],["u64"]],["result"]]],[11,"limit","","",9,[[["self"]],["option",["u64"]]]],[11,"eq","cdr","",10,[[["self"],["cdrbe"]],["bool"]]],[11,"eq","","",11,[[["self"],["cdrle"]],["bool"]]],[11,"eq","","",12,[[["self"],["plcdrbe"]],["bool"]]],[11,"eq","","",13,[[["self"],["plcdrle"]],["bool"]]],[11,"eq","cdr::size","",0,[[["self"],["bounded"]],["bool"]]],[11,"ne","","",0,[[["self"],["bounded"]],["bool"]]],[11,"eq","","",9,[[["self"],["infinite"]],["bool"]]],[11,"clone","cdr","",10,[[["self"]],["cdrbe"]]],[11,"clone","","",11,[[["self"]],["cdrle"]]],[11,"clone","","",12,[[["self"]],["plcdrbe"]]],[11,"clone","","",13,[[["self"]],["plcdrle"]]],[11,"clone","cdr::size","",0,[[["self"]],["bounded"]]],[11,"clone","","",9,[[["self"]],["infinite"]]],[11,"from","cdr::de","",2,[[["deserializer",["bigendian"]]],["self"]]],[11,"from","cdr","",3,[[["context",["errorkind"]]],["error"]]],[11,"from","","",3,[[["errorkind"]],["error"]]],[11,"from","","",3,[[["error"]],["self"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","cdr::size","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"hash","cdr","",10,N],[11,"hash","","",11,N],[11,"hash","","",12,N],[11,"hash","","",13,N],[11,"hash","cdr::size","",0,N],[11,"hash","","",9,N],[11,"description","cdr","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"custom","","",3,[[["t"]],["self"]]],[11,"custom","","",3,[[["t"]],["self"]]],[11,"cause","","",1,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",1,[[["self"]],["option",["backtrace"]]]],[11,"option","","",6,N]],"paths":[[3,"Bounded"],[4,"ErrorKind"],[3,"Deserializer"],[3,"Error"],[3,"Serializer"],[8,"SizeLimit"],[8,"Encapsulation"],[4,"BigEndian"],[4,"LittleEndian"],[3,"Infinite"],[4,"CdrBe"],[4,"CdrLe"],[4,"PlCdrBe"],[4,"PlCdrLe"]]};
initSearch(searchIndex);
